#!/bin/bash
# Netmon Nodewatcher (C) 2010-2012 Freifunk Oldenburg
# License; GPL v3

export SCRIPT_VERSION="59-sa"

cd "$(dirname "$0")"

# Include settings
set -a
source settings.sh
set +a

debug() {
	(>&2 echo "nodewatcher: $1")
}

#This method generates the crawl data XML file that is being fetched by netmon
#and provided by a small local httpd
crawl() {
	DATA="<?xml version='1.0' standalone='yes'?><data>"

	# sanity check for UNIQUE_INTERFACE to prevent duplicate monitoring entries
	if ! grep 'up\|unkonwn' "/sys/class/net/$UNIQUE_INTERFACE/operstate" >/dev/null; then
		debug "UNIQUE_INTERFACE does not exist, or isn't administratively UP!"
		exit 1
	fi
	if [[ " $IFACEBLACKLIST " =~ " $UNIQUE_INTERFACE " ]]; then
		debug "UNIQUE_INTERFACE is blacklisted!"
		exit 1
	fi
	UNIQUE_INTERFACE_MAC="$(ip addr show dev $UNIQUE_INTERFACE | awk '/ether/ { printf $2 }')"
	[ -n "$UNIQUE_INTERFACE_MAC" ] || (debug "UNIQUE_INTERFACE_MAC is empty!"; exit 1)

	for f in nodewatcher.d/*.sh; do
		tmp="$($f)"
		if [ $? -ne 0 ]; then
			debug "Error when executing subscript $f, exiting!"
			exit 1
		fi
		DATA="$DATA$tmp"
	done

	DATA="$DATA</data>"

	#write data to xml file that provides the data on httpd
	echo -n "{\"64\": {\"$UNIQUE_INTERFACE_MAC\": \"$DATA\"}}" | curl -H "Content-type: application/json; charset=UTF-8" --data-binary @- https://monitoring.freifunk-franken.de/api/alfred
}

LANG=C

#Erzeugt die statusdaten
debug "Generate actual status data"
crawl

exit 0
